SELECT T2.p_name as '最上级党委',T2.parent_name as '上级党委', T2.name as '支部名称', T2.setup_datetime as '设选时间',
			 T1.yp_reported_rate 			as '年度计划-规范报送率',
			 T1.yp_agency_goodjob 		as '年度计划-规范报送支部数',
			 T1.yp_return_rate 				as '年度计划-驳回后上报率',
			 T1.yp_delay_rate 				as '年度计划-逾期授权后上报率',
			 T1.yp_eva_rate 					as '年度计划-上级评价率',
			 T1.yp_eva_1_rate 				as '年度计划-上级评价率-好',
			 T1.yp_eva_2_rate 				as '年度计划-上级评价率-较好',
			 T1.yp_eva_3_rate 				as '年度计划-上级评价率-一般',
			 T1.yp_eva_4_rate 				as '年度计划-上级评价率-差',
			 
			 T1.qp_reported_rate 			as '季度计划-规范报送率',
			 T1.qp_agency_goodjob 		as '季度计划-规范报送支部数',
			 T1.qp_return_rate 				as '季度计划-驳回后上报率',
			 T1.qp_delay_rate 				as '季度计划-逾期授权后上报率',
			 T1.qp_eva_rate 					as '季度计划-上级评价率',
			 T1.qp_eva_1_rate 				as '季度计划-上级评价率-好',
			 T1.qp_eva_2_rate 				as '季度计划-上级评价率-较好',
			 T1.qp_eva_3_rate 				as '季度计划-上级评价率-一般',
			 T1.qp_eva_4_rate 				as '季度计划-上级评价率-差',	
			 
			 T1.qs_reported_rate 			as '季度执行情况-规范报送率',
			 T1.qs_agency_goodjob 		as '季度执行情况-规范报送支部数',
			 T1.qs_return_rate 				as '季度执行情况-驳回后上报率',
			 T1.qs_delay_rate 				as '季度执行情况-逾期授权后上报率',
			 T1.qs_eva_rate 					as '季度执行情况-上级评价率',
			 T1.qs_eva_1_rate 				as '季度执行情况-上级评价率-好',
			 T1.qs_eva_2_rate 				as '季度执行情况-上级评价率-较好',
			 T1.qs_eva_3_rate 				as '季度执行情况-上级评价率-一般',
			 T1.qs_eva_4_rate 				as '季度执行情况-上级评价率-差',				 		 

			 T1.ys_reported_rate 			as '年终总结-规范报送率',
			 T1.ys_agency_goodjob 		as '年终总结-规范报送支部数',
			 T1.ys_return_rate 				as '年终总结-驳回后上报率',
			 T1.ys_delay_rate 				as '年终总结-逾期授权后上报率',
			 T1.ys_eva_rate 					as '年终总结-上级评价率',
			 T1.ys_eva_1_rate 				as '年终总结-上级评价率-好',
			 T1.ys_eva_2_rate 				as '年终总结-上级评价率-较好',
			 T1.ys_eva_3_rate 				as '年终总结-上级评价率-一般',
			 T1.ys_eva_4_rate 				as '年终总结-上级评价率-差'
			 
  INTO OUTFILE 'E:/partycommittee_new/table_plan.csv'
  FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"'
  LINES TERMINATED BY '\n'
			 FROM		 
			 
				 (SELECT agency_id,
				 	  ROUND( COUNT(CASE WHEN type_id = 1 AND reported_rate = 1  THEN agency_id END)/COUNT( CASE WHEN type_id = 1 THEN agency_id END ), 4) yp_reported_rate,
				 	  COUNT(CASE WHEN type_id = 1 AND reported_rate = 1 THEN agency_id END) as yp_agency_goodjob,
				 	  ROUND( COUNT(CASE WHEN type_id = 1 AND return_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 1 THEN agency_id END ), 4) as yp_return_rate, 
				 	  ROUND( COUNT(CASE WHEN type_id = 1 AND delay_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 1 THEN agency_id END ), 4) as yp_delay_rate,
				 	  ROUND(SUM(CASE WHEN type_id = 1 THEN eva END )/SUM( CASE WHEN type_id = 1 THEN total END ), 4) as yp_eva_rate , 
				 	  ROUND(SUM(CASE WHEN type_id = 1 THEN eva_1 END )/SUM(CASE WHEN type_id = 1 THEN eva END ), 4) as yp_eva_1_rate, 
						ROUND(SUM(CASE WHEN type_id = 1 THEN eva_2 END )/SUM(CASE WHEN type_id = 1 THEN eva END ), 4) as yp_eva_2_rate,  
						ROUND(SUM(CASE WHEN type_id = 1 THEN eva_3 END )/SUM(CASE WHEN type_id = 1 THEN eva END ), 4) as yp_eva_3_rate,  
						ROUND(SUM(CASE WHEN type_id = 1 THEN eva_4 END )/SUM(CASE WHEN type_id = 1 THEN eva END ), 4) as yp_eva_4_rate,  
						
				 	  ROUND( COUNT(CASE WHEN type_id = 2 AND reported_rate = 1  THEN agency_id END)/COUNT( CASE WHEN type_id = 2 THEN agency_id END ), 4) qp_reported_rate,
				 	  COUNT(CASE WHEN type_id = 2 AND reported_rate = 1 THEN agency_id END) as qp_agency_goodjob,
				 	  ROUND( COUNT(CASE WHEN type_id = 2 AND return_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 2 THEN agency_id END ), 4) as qp_return_rate, 
				 	  ROUND( COUNT(CASE WHEN type_id = 2 AND delay_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 2 THEN agency_id END ), 4) as qp_delay_rate,
				 	  ROUND(SUM(CASE WHEN type_id = 2 THEN eva END )/SUM( CASE WHEN type_id = 2 THEN total END ), 4) as qp_eva_rate , 
				 	  ROUND(SUM(CASE WHEN type_id = 2 THEN eva_1 END )/SUM(CASE WHEN type_id = 2 THEN eva END ), 4) as qp_eva_1_rate, 
						ROUND(SUM(CASE WHEN type_id = 2 THEN eva_2 END )/SUM(CASE WHEN type_id = 2 THEN eva END ), 4) as qp_eva_2_rate,  
						ROUND(SUM(CASE WHEN type_id = 2 THEN eva_3 END )/SUM(CASE WHEN type_id = 2 THEN eva END ), 4) as qp_eva_3_rate,  
						ROUND(SUM(CASE WHEN type_id = 2 THEN eva_4 END )/SUM(CASE WHEN type_id = 2 THEN eva END ), 4) as qp_eva_4_rate,  		
				
				 	  ROUND( COUNT(CASE WHEN type_id = 3 AND reported_rate = 1  THEN agency_id END)/COUNT( CASE WHEN type_id = 3 THEN agency_id END ), 4) qs_reported_rate,
				 	  COUNT(CASE WHEN type_id = 3 AND reported_rate = 1 THEN agency_id END) as qs_agency_goodjob,
				 	  ROUND( COUNT(CASE WHEN type_id = 3 AND return_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 3 THEN agency_id END ), 4) as qs_return_rate, 
				 	  ROUND( COUNT(CASE WHEN type_id = 3 AND delay_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 3 THEN agency_id END ), 4) as qs_delay_rate,
				 	  ROUND(SUM(CASE WHEN type_id = 3 THEN eva END )/SUM( CASE WHEN type_id = 3 THEN total END ), 4) as qs_eva_rate , 
				 	  ROUND(SUM(CASE WHEN type_id = 3 THEN eva_1 END )/SUM(CASE WHEN type_id = 3 THEN eva END ), 4) as qs_eva_1_rate, 
						ROUND(SUM(CASE WHEN type_id = 3 THEN eva_2 END )/SUM(CASE WHEN type_id = 3 THEN eva END ), 4) as qs_eva_2_rate,  
						ROUND(SUM(CASE WHEN type_id = 3 THEN eva_3 END )/SUM(CASE WHEN type_id = 3 THEN eva END ), 4) as qs_eva_3_rate,  
						ROUND(SUM(CASE WHEN type_id = 3 THEN eva_4 END )/SUM(CASE WHEN type_id = 3 THEN eva END ), 4) as qs_eva_4_rate, 
						
				 	  ROUND( COUNT(CASE WHEN type_id = 4 AND reported_rate = 1  THEN agency_id END)/COUNT( CASE WHEN type_id = 4 THEN agency_id END ), 4) ys_reported_rate,
				 	  COUNT(CASE WHEN type_id = 4 AND reported_rate = 1 THEN agency_id END) as ys_agency_goodjob,
				 	  ROUND( COUNT(CASE WHEN type_id = 4 AND return_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 4 THEN agency_id END ), 4) as ys_return_rate, 
				 	  ROUND( COUNT(CASE WHEN type_id = 4 AND delay_rate = 1 THEN agency_id END)/COUNT( CASE WHEN type_id = 4 THEN agency_id END ), 4) as ys_delay_rate,
				 	  ROUND(SUM(CASE WHEN type_id = 4 THEN eva END )/SUM( CASE WHEN type_id = 4 THEN total END ), 4) as ys_eva_rate , 
				 	  ROUND(SUM(CASE WHEN type_id = 4 THEN eva_1 END )/SUM(CASE WHEN type_id = 4 THEN eva END ), 4) as ys_eva_1_rate, 
						ROUND(SUM(CASE WHEN type_id = 4 THEN eva_2 END )/SUM(CASE WHEN type_id = 4 THEN eva END ), 4) as ys_eva_2_rate,  
						ROUND(SUM(CASE WHEN type_id = 4 THEN eva_3 END )/SUM(CASE WHEN type_id = 4 THEN eva END ), 4) as ys_eva_3_rate,  
						ROUND(SUM(CASE WHEN type_id = 4 THEN eva_4 END )/SUM(CASE WHEN type_id = 4 THEN eva END ), 4) as ys_eva_4_rate
				
				 FROM pc_zzsh_stat
				 WHERE year = 2012 AND code_id = 10 AND quarter = 3 and setup_datetime < '2012-10-01 00:00:00' GROUP BY agency_id) as T1
	 
	 LEFT JOIN
	 (
	 
		select h.name as p_name, g.* from
			(select f.parent_id as p_id, e.* from
				(select d.name as parent_name, d.id as parent_id, c.name,c.id, c.code, c.setup_datetime  FROM
					(select a.id, a.name, a.code, a.setup_datetime, b.parent_id from pc_agency as a left join pc_agency_relation as b on a.id = b.agency_id) as c 
						LEFT JOIN  pc_agency as d on c.parent_id = d.id ) as e
					LEFT JOIN  pc_agency_relation as f on e.parent_id = f.agency_id) as g
				LEFT JOIN  pc_agency as h on g.p_id = h.id

   ) as T2 ON T1.agency_id = T2.id
   where T2.parent_id is not null order by agency_id 